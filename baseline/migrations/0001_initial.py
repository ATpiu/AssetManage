# Generated by Django 3.0.4 on 2020-03-17 19:09

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AllScanResRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scanTime', models.DateTimeField(verbose_name='scanTime')),
                ('scanType', models.CharField(max_length=50, verbose_name='scanTime')),
                ('hostname', models.CharField(max_length=100, verbose_name='hostname')),
                ('osVersion', models.CharField(max_length=100, verbose_name='osVersion')),
                ('ipList', models.CharField(max_length=100, verbose_name='ipList')),
                ('macaddr', models.CharField(max_length=100, verbose_name='macaddr')),
            ],
            options={
                'verbose_name': '所有安全基线的扫描记录',
                'verbose_name_plural': '所有安全基线的扫描记录',
            },
        ),
        migrations.CreateModel(
            name='LinuxCheckRes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scanTime', models.DateTimeField(verbose_name='scanTime')),
                ('hostname', models.CharField(max_length=100, verbose_name='hostname')),
                ('osVersion', models.CharField(max_length=100, verbose_name='osVersion')),
                ('ipList', models.CharField(max_length=100, verbose_name='ipList')),
                ('macaddr', models.CharField(max_length=100, verbose_name='macaddr')),
                ('kernelVersion', models.CharField(max_length=100, verbose_name='macaddr')),
                ('ck_tmpIfSeparate', models.CharField(default='False', max_length=20, verbose_name='ck_tmpIfSeparate')),
                ('ck_tmpIfNoexec', models.CharField(default='False', max_length=20, verbose_name='ck_tmpIfNoexec')),
                ('ck_tmpIfNosuid', models.CharField(default='False', max_length=20, verbose_name='ck_tmpIfNosuid')),
                ('ck_grubcfgPermissionLE600', models.CharField(default='False', max_length=20, verbose_name='ck_grubcfgPermissionLE600')),
                ('ck_grubcfgIfSetPasswd', models.CharField(default='False', max_length=20, verbose_name='ck_grubcfgIfSetPasswd')),
                ('ck_singleUserModeIfNeedAuth', models.CharField(default='False', max_length=20, verbose_name='ck_singleUserModeIfNeedAuth')),
                ('ck_selinuxStateIfEnforcing', models.CharField(default='False', max_length=20, verbose_name='ck_selinuxStateIfEnforcing')),
                ('ck_selinuxPolicyIfConfigured', models.CharField(default='False', max_length=20, verbose_name='ck_selinuxPolicyIfConfigured')),
                ('ck_timeSyncServerIfConfigured', models.CharField(default='False', max_length=20, verbose_name='ck_timeSyncServerIfConfigured')),
                ('ck_x11windowIfNotInstalled', models.CharField(default='False', max_length=20, verbose_name='ck_x11windowIfNotInstalled')),
                ('ck_hostsAllowFilePermission', models.CharField(default='False', max_length=20, verbose_name='ck_hostsAllowFilePermission')),
                ('ck_hostsAllowFileIfConfigured', models.CharField(default='False', max_length=20, verbose_name='ck_hostsAllowFileIfConfigured')),
                ('ck_hostsDenyFilePermission', models.CharField(default='False', max_length=20, verbose_name='ck_hostsDenyFilePermission')),
                ('ck_hostsDenyFileIfConfigured', models.CharField(default='False', max_length=20, verbose_name='ck_hostsDenyFileIfConfigured')),
                ('ck_iptablesIfInstalled', models.CharField(default='False', max_length=20, verbose_name='ck_iptablesIfInstalled')),
                ('ck_iptablesInputPolicyIfDrop', models.CharField(default='False', max_length=20, verbose_name='ck_iptablesInputPolicyIfDrop')),
                ('ck_iptablesOutputPolicyIfDrop', models.CharField(default='False', max_length=20, verbose_name='ck_iptablesOutputPolicyIfDrop')),
                ('ck_auditdIfEnabled', models.CharField(default='False', max_length=20, verbose_name='ck_auditdIfEnabled')),
                ('ck_auditdIfSetMaxLogFile', models.CharField(default='False', max_length=20, verbose_name='ck_auditdIfSetMaxLogFile')),
                ('ck_auditdIfSetMaxLogFileAction', models.CharField(default='False', max_length=20, verbose_name='ck_auditdIfSetMaxLogFileAction')),
                ('ck_auditdIfSetSpaceLeftAction', models.CharField(default='False', max_length=20, verbose_name='ck_auditdIfSetSpaceLeftAction')),
                ('ck_auditdIfSetNumLogs', models.CharField(default='False', max_length=20, verbose_name='ck_auditdIfSetNumLogs')),
                ('ck_auditdIfCheckTimechange', models.CharField(default='False', max_length=20, verbose_name='ck_auditdIfCheckTimechange')),
                ('ck_auditdRulesNotCheckedUserandgroupfile', models.CharField(default='False', max_length=20, verbose_name='ck_auditdRulesNotCheckedUserandgroupfile')),
                ('ck_auditdRulesNotCheckedLoginoutEvents', models.CharField(default='False', max_length=20, verbose_name='ck_auditdRulesNotCheckedUserandgroupfileLoginoutEvents')),
                ('ck_auditdRulesNotCheckedNetworkenv', models.CharField(default='False', max_length=20, verbose_name='ck_auditdRulesNotCheckedNetworkenv')),
                ('ck_auditdRulesNotCheckedMACchange', models.CharField(default='False', max_length=20, verbose_name='ck_auditdRulesNotCheckedMACchange')),
                ('ck_auditdRulesNotCheckedDACChangeSyscall', models.CharField(default='False', max_length=20, verbose_name='ck_auditdRulesNotCheckedDACChangeSyscall')),
                ('ck_auditdRulesNotCheckedFileAccessAttemptSyscall', models.CharField(default='False', max_length=20, verbose_name='ck_auditdRulesNotCheckedFileAccessAttemptSyscall')),
                ('ck_auditdRulesNotCheckedPrivilegedCommand', models.CharField(default='False', max_length=20, verbose_name='ck_auditdRulesNotCheckedPrivilegedCommand')),
                ('ck_auditdRulesNotCheckedSudoerFile', models.CharField(default='False', max_length=20, verbose_name='ck_auditdRulesNotCheckedSudoerFile')),
                ('ck_auditdRulesIfImmutable', models.CharField(default='False', max_length=20, verbose_name='ck_auditdRulesIfImmutable')),
                ('ck_rsyslogIfEnabled', models.CharField(default='False', max_length=20, verbose_name='ck_rsyslogIfEnabled')),
                ('ck_crondIfEnabled', models.CharField(default='False', max_length=20, verbose_name='ck_crondIfEnabled')),
                ('ck_crondConfigFilePermissionArray', models.CharField(default='False', max_length=20, verbose_name='ck_crondConfigFilePermissionArray')),
                ('ck_crondallowdenyFilePermissionArray', models.CharField(default='False', max_length=20, verbose_name='ck_crondallowdenyFilePermissionArray')),
                ('ck_sshdConfigFilePermission', models.CharField(default='False', max_length=20, verbose_name='ck_sshdConfigFilePermission')),
                ('ck_sshdIfDisableX11forwarding', models.CharField(default='False', max_length=20, verbose_name='ck_sshdIfDisableX11forwarding')),
                ('ck_sshdIfSetMaxAuthTries', models.CharField(default='False', max_length=20, verbose_name='ck_sshdIfSetMaxAuthTries')),
                ('ck_sshdIfEnableIgnoreRhosts', models.CharField(default='False', max_length=20, verbose_name='ck_sshdIfEnableIgnoreRhosts')),
                ('ck_sshdIfDisableHostbasedAuthentication', models.CharField(default='False', max_length=20, verbose_name='ck_sshdIfDisableHostbasedAuthentication')),
                ('ck_sshdIfDisablePermitRootLogin', models.CharField(default='False', max_length=20, verbose_name='ck_sshdIfDisablePermitRootLogin')),
                ('ck_sshdIfDisablePermitEmptyPasswords', models.CharField(default='False', max_length=20, verbose_name='ck_sshdIfDisablePermitEmptyPasswords')),
                ('ck_sshdIfDisablePermitUserEnvironment', models.CharField(default='False', max_length=20, verbose_name='ck_sshdIfDisablePermitUserEnvironment')),
                ('ck_sshdIfSpecificMACs', models.CharField(default='False', max_length=20, verbose_name='ck_sshdIfSpecificMACs')),
                ('ck_sshdIfSetClientAliveInterval', models.CharField(default='False', max_length=20, verbose_name='ck_sshdIfSetClientAliveInterval')),
                ('ck_sshdIfSetLoginGraceTime', models.CharField(default='False', max_length=20, verbose_name='ck_sshdIfSetLoginGraceTime')),
                ('ck_pamIfSetMinlen', models.CharField(default='False', max_length=20, verbose_name='ck_pamIfSetMinlen')),
                ('ck_pamIfSetMinclass', models.CharField(default='False', max_length=20, verbose_name='ck_pamIfSetMinclass')),
                ('ck_sshdNotSetedLockAndUnlockTimeFiles', models.CharField(default='False', max_length=20, verbose_name='ck_sshdNotSetedLockAndUnlockTimeFiles')),
                ('ck_sshdPamdFileReuseLimitArray', models.CharField(default='False', max_length=20, verbose_name='ck_sshdPamdFileReuseLimitArray')),
                ('ck_sshdPamdFileIfSetSha512Array', models.CharField(default='False', max_length=20, verbose_name='ck_sshdPamdFileIfSetSha512Array')),
                ('ck_accountPassMaxDays', models.CharField(default='False', max_length=20, verbose_name='ck_accountPassMaxDays')),
                ('ck_accountPassMinDays', models.CharField(default='False', max_length=20, verbose_name='ck_accountPassMinDays')),
                ('ck_accountPassWarnDays', models.CharField(default='False', max_length=20, verbose_name='ck_accountPassWarnDays')),
                ('ck_accountPassAutolockInactiveDays', models.CharField(default='False', max_length=20, verbose_name='ck_accountPassAutolockInactiveDays')),
                ('ck_accountShouldUnloginArray', models.CharField(default='False', max_length=20, verbose_name='ck_accountShouldUnloginArray')),
                ('ck_accountGIDOfRoot', models.CharField(default='False', max_length=20, verbose_name='ck_accountGIDOfRoot')),
                ('ck_accountProfileTMOUTArray', models.CharField(default='False', max_length=20, verbose_name='ck_accountProfileTMOUTArray')),
                ('ck_accountIfSetUsersCanAccessSuCommand', models.CharField(default='False', max_length=20, verbose_name='ck_accountIfSetUsersCanAccessSuCommand')),
                ('ck_importantFilePermissionArray', models.CharField(default='False', max_length=20, verbose_name='ck_importantFilePermissionArray')),
                ('ck_importantFileUidgidArray', models.CharField(default='False', max_length=20, verbose_name='ck_importantFileUidgidArray')),
                ('ck_userIfSetPasswdOrArray', models.CharField(default='False', max_length=20, verbose_name='ck_userIfSetPasswdOrArray')),
                ('ck_uid0OnlyRootOrArray', models.CharField(default='False', max_length=20, verbose_name='ck_uid0OnlyRootOrArray')),
                ('ck_pathDirIfNotHasDot', models.CharField(default='False', max_length=20, verbose_name='ck_pathDirIfNotHasDot')),
                ('ck_pathDirPermissionHasGWArray', models.CharField(default='False', max_length=20, verbose_name='ck_pathDirPermissionHasGWArray')),
                ('ck_pathDirPermissionHasOWArray', models.CharField(default='False', max_length=20, verbose_name='ck_pathDirPermissionHasOWArray')),
                ('ck_pathDirDoesNotExistOrNotDirArray', models.CharField(default='False', max_length=20, verbose_name='ck_pathDirDoesNotExistOrNotDirArray')),
                ('ck_userHomeDirIfExistArray', models.CharField(default='False', max_length=20, verbose_name='ck_userHomeDirIfExistArray')),
                ('ck_userHomeDirPermissionArray', models.CharField(default='False', max_length=20, verbose_name='ck_userHomeDirPermissionArray')),
                ('ck_userIfOwnTheirHomeDirArray', models.CharField(default='False', max_length=20, verbose_name='ck_userIfOwnTheirHomeDirArray')),
                ('ck_userHomeDirIfHasGWorOWDotFileArray', models.CharField(default='False', max_length=20, verbose_name='ck_userHomeDirIfHasGWorOWDotFileArray')),
                ('ck_userHomeDirIfHasOtherFileArray', models.CharField(default='False', max_length=20, verbose_name='ck_userHomeDirIfHasOtherFileArray')),
                ('ck_groupNotExistInetcgroup', models.CharField(default='False', max_length=20, verbose_name='ck_groupNotExistInetcgroup')),
                ('ck_usersIfHasUniqueUIDArray', models.CharField(default='False', max_length=20, verbose_name='ck_usersIfHasUniqueUIDArray')),
                ('ck_groupsIfHasUniqueGIDArray', models.CharField(default='False', max_length=20, verbose_name='ck_groupsIfHasUniqueGIDArray')),
            ],
            options={
                'verbose_name': 'Linux安全基线检查结果',
                'verbose_name_plural': 'Linux安全基线检查结果',
            },
        ),
        migrations.CreateModel(
            name='LinuxScanRes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scanTime', models.DateTimeField(verbose_name='scanTime')),
                ('ipList', models.CharField(max_length=100, verbose_name='ipList')),
                ('hostname', models.CharField(max_length=100, verbose_name='hostname')),
                ('macaddr', models.CharField(max_length=100, verbose_name='macaddr')),
                ('osVersion', models.CharField(max_length=30, verbose_name='osVersion')),
                ('kernelVersion', models.CharField(max_length=30, verbose_name='kernelVersion')),
                ('tmpIfSeparate', models.CharField(max_length=10, verbose_name='tmpIfSeparate')),
                ('tmpIfNoexec', models.CharField(max_length=10, verbose_name='tmpIfNoexec')),
                ('tmpIfNosuid', models.CharField(max_length=10, verbose_name='tmpIfNosuid')),
                ('grubcfgIfExist', models.CharField(max_length=10, verbose_name='grubcfgIfExist')),
                ('grubcfgPermission', models.CharField(max_length=10, verbose_name='grubcfgPermission')),
                ('grubcfgIfSetPasswd', models.CharField(max_length=10, verbose_name='grubcfgIfSetPasswd')),
                ('singleUserModeIfNeedAuth', models.CharField(max_length=10, verbose_name='singleUserModeIfNeedAuth')),
                ('selinuxStateIfEnforcing', models.CharField(max_length=10, verbose_name='selinuxStateIfEnforcing')),
                ('selinuxPolicyIfConfigured', models.CharField(max_length=10, verbose_name='selinuxPolicyIfConfigured')),
                ('timeSyncServerIfConfigured', models.CharField(max_length=10, verbose_name='timeSyncServerIfConfigured')),
                ('x11windowIfNotInstalled', models.CharField(max_length=10, verbose_name='x11windowIfNotInstalled')),
                ('hostsAllowFileIfExist', models.CharField(max_length=10, verbose_name='hostsAllowFileIfExist')),
                ('hostsAllowFilePermission', models.CharField(max_length=10, verbose_name='hostsAllowFilePermission')),
                ('hostsAllowFileIfConfigured', models.CharField(max_length=10, verbose_name='hostsAllowFileIfConfigured')),
                ('hostsDenyFileIfExist', models.CharField(max_length=10, verbose_name='hostsDenyFileIfExist')),
                ('hostsDenyFilePermission', models.CharField(max_length=10, verbose_name='hostsDenyFilePermission')),
                ('hostsDenyFileIfConfigured', models.CharField(max_length=10, verbose_name='hostsDenyFileIfConfigured')),
                ('iptablesIfInstalled', models.CharField(max_length=10, verbose_name='iptablesIfInstalled')),
                ('iptablesInputPolicyIfDrop', models.CharField(max_length=10, verbose_name='iptablesInputPolicyIfDrop')),
                ('iptablesOutputPolicyIfDrop', models.CharField(max_length=10, verbose_name='iptablesOutputPolicyIfDrop')),
                ('auditdIfEnabled', models.CharField(max_length=10, verbose_name='auditdIfEnabled')),
                ('auditdconfIfExist', models.CharField(max_length=10, verbose_name='aditdconfIfExist')),
                ('auditdIfSetMaxLogFile', models.CharField(max_length=10, verbose_name='auditdIfSetMaxLogFile')),
                ('auditdIfSetMaxLogFileAction', models.CharField(max_length=10, verbose_name='auditdIfSetMaxLogFileAction')),
                ('auditdIfSetSpaceLeftAction', models.CharField(max_length=10, verbose_name='auditdIfSetSpaceLeftAction')),
                ('auditdIfSetNumLogs', models.CharField(max_length=10, verbose_name='auditdIfSetNumLogs')),
                ('auditdRulesIfExist', models.CharField(max_length=10, verbose_name='auditdRulesIfExist')),
                ('auditdRulesIfNotNull', models.CharField(max_length=10, verbose_name='auditdRulesIfNotNull')),
                ('auditdIfCheckTimechange', models.CharField(max_length=10, verbose_name='auditdIfCheckTimechange')),
                ('auditdRulesCheckedUserandgroupfile', models.CharField(max_length=10, verbose_name='auditdRulesCheckUserandgroupfile')),
                ('auditdRulesNotCheckedUserandgroupfile', models.CharField(max_length=10, verbose_name='auditdRulesNotCheckUserandgroupfile')),
                ('auditdRulesCheckedNetworkenv', models.CharField(max_length=10, verbose_name='auditdRulesCheckedNetworkenv')),
                ('auditdRulesNotCheckedNetworkenv', models.CharField(max_length=10, verbose_name='auditdRulesNotCheckedNetworkenv')),
                ('auditdRulesCheckedMACchange', models.CharField(max_length=10, verbose_name='auditdRulesCheckedMACchange')),
                ('auditdRulesNotCheckedMACchange', models.CharField(max_length=10, verbose_name='auditdRulesNotCheckedMACchange')),
                ('auditdRulesCheckedLoginoutEvents', models.CharField(max_length=10, verbose_name='auditdRulesCheckedLoginoutEvents')),
                ('auditdRulesNotCheckedLoginoutEvents', models.CharField(max_length=10, verbose_name='auditdRulesNotCheckedLoginoutEvents')),
                ('auditdRulesCheckedDACChangeSyscall', models.CharField(max_length=10, verbose_name='auditdRulesCheckedDACChangeSyscall')),
                ('auditdRulesNotCheckedDACChangeSyscall', models.CharField(max_length=10, verbose_name='auditdRulesNotCheckedDACChangeSyscall')),
                ('auditdRulesCheckedFileAccessAttemptSyscall', models.CharField(max_length=10, verbose_name='auditdRulesCheckedFileAccessAttemptSyscall')),
                ('auditdRulesNotCheckedFileAccessAttemptSyscall', models.CharField(max_length=10, verbose_name='auditdRulesNotCheckedFileAccessAttemptSyscall')),
                ('auditdRulesCheckedPrivilegedCommand', models.CharField(max_length=10, verbose_name='auditdRulesCheckedPrivilegedCommand')),
                ('auditdRulesNotCheckedPrivilegedCommand', models.CharField(max_length=10, verbose_name='auditdRulesNotCheckedPrivilegedCommand')),
                ('auditdRulesCheckedSudoerFile', models.CharField(max_length=10, verbose_name='auditdRulesCheckedSudoerFile')),
                ('auditdRulesNotCheckedSudoerFile', models.CharField(max_length=10, verbose_name='auditdRulesNotCheckedSudoerFile')),
                ('auditdRulesIfImmutable', models.CharField(max_length=10, verbose_name='auditdRulesIfImmutable')),
                ('rsyslogIfEnabled', models.CharField(max_length=10, verbose_name='rsyslogIfEnabled')),
                ('crondIfEnabled', models.CharField(max_length=10, verbose_name='crondIfEnabled')),
                ('crondConfigFilenameArray', models.CharField(max_length=10, verbose_name='crondConfigFilenameArray')),
                ('crondConfigFilePermissionArray', models.CharField(max_length=10, verbose_name='crondConfigFilePermissionArray')),
                ('crondallowdenyFilenameArray', models.CharField(max_length=10, verbose_name='crondallowdenyFilenameArray')),
                ('crondallowdenyFileIfExistArray', models.CharField(max_length=10, verbose_name='crondallowdenyFileIfExist')),
                ('crondallowdenyFilePermissionArray', models.CharField(max_length=10, verbose_name='crondallowdenyFilePermissionArray')),
                ('crondallowdenyFileOwnerArray', models.CharField(max_length=10, verbose_name='crondallowdenyFileOwnerArray')),
                ('sshdIfEnabled', models.CharField(max_length=10, verbose_name='sshdIfEnabled')),
                ('sshdConfigFilePermission', models.CharField(max_length=10, verbose_name='sshdConfigFilePermission')),
                ('sshdIfDisableX11forwarding', models.CharField(max_length=10, verbose_name='sshdIfDisableX11forwarding')),
                ('sshdIfSetMaxAuthTries', models.CharField(max_length=10, verbose_name='sshdIfSetMaxAuthTries')),
                ('sshdIfEnableIgnoreRhosts', models.CharField(max_length=10, verbose_name='sshdIfEnableIgnoreRhosts')),
                ('sshdIfDisableHostbasedAuthentication', models.CharField(max_length=10, verbose_name='sshdIfDisableHostbasedAuthentication')),
                ('sshdIfDisablePermitRootLogin', models.CharField(max_length=10, verbose_name='sshdIfDisablePermitRootLogin')),
                ('sshdIfDisablePermitEmptyPasswords', models.CharField(max_length=10, verbose_name='sshdIfDisablePermitEmptyPasswords')),
                ('sshdIfDisablePermitUserEnvironment', models.CharField(max_length=10, verbose_name='sshdIfDisablePermitUserEnvironment')),
                ('sshdIfSpecificMACs', models.CharField(max_length=10, verbose_name='sshdIfSpecificMACs')),
                ('sshdIfSetClientAliveInterval', models.CharField(max_length=10, verbose_name='sshdIfSetClientAliveInterval')),
                ('sshdIfSetLoginGraceTime', models.CharField(max_length=10, verbose_name='sshdIfSetLoginGraceTime')),
                ('pamPwqualityconfIfExist', models.CharField(max_length=10, verbose_name='pamPwqualityconfIfExist')),
                ('pamIfSetMinlen', models.CharField(max_length=10, verbose_name='pamIfSetMinlen')),
                ('pamIfSetMinclass', models.CharField(max_length=10, verbose_name='pamIfSetMinclass')),
                ('sshdSetedLockAndUnlockTimeFiles', models.CharField(max_length=10, verbose_name='sshdSetedLockAndUnlockTimeFiles')),
                ('sshdNotSetedLockAndUnlockTimeFiles', models.CharField(max_length=10, verbose_name='sshdNotSetedLockAndUnlockTimeFiles')),
                ('sshdPamdFileArray', models.CharField(max_length=10, verbose_name='sshdPamdFileArray')),
                ('sshdPamdFileReuseLimitArray', models.CharField(max_length=10, verbose_name='sshdPamdFileReuseLimitArray')),
                ('sshdPamdFileIfSetSha512Array', models.CharField(max_length=10, verbose_name='sshdPamdFileIfSetSha512Array')),
                ('accountPassMaxDays', models.CharField(max_length=10, verbose_name='accountPassMaxDays')),
                ('accountPassMinDays', models.CharField(max_length=10, verbose_name='accountPassMinDays')),
                ('accountPassWarnDays', models.CharField(max_length=10, verbose_name='accountPassWarnDays')),
                ('accountPassAutolockInactiveDays', models.CharField(max_length=10, verbose_name='accountPassAutolockInactinveDays')),
                ('accountShouldUnloginArray', models.CharField(max_length=10, verbose_name='accountShouldUnloginArray')),
                ('accountGIDOfRoot', models.CharField(max_length=10, verbose_name='accountGIDOfRoot')),
                ('accountProfileFileArray', models.CharField(max_length=10, verbose_name='accountProfileFileArray')),
                ('accountProfileTMOUTArray', models.CharField(max_length=10, verbose_name='accountProfileTMOUTArray')),
                ('accountIfSetUsersCanAccessSuCommand', models.CharField(max_length=10, verbose_name='accountIfSetUsersCanAccessSuCommand')),
                ('importantFilenameArray', models.CharField(max_length=10, verbose_name='importantFilenameArray')),
                ('importantFilePermissionArray', models.CharField(max_length=10, verbose_name='importantFilePermissionArray')),
                ('importantFileUidgidArray', models.CharField(max_length=10, verbose_name='importantFileUidgidArray')),
                ('userIfSetPasswdOrArray', models.CharField(max_length=10, verbose_name='userIfSetPasswdOrArray')),
                ('uid0OnlyRootOrArray', models.CharField(max_length=10, verbose_name='uid0OnlyRootOrArray')),
                ('pathDirIfNotHasDot', models.CharField(max_length=10, verbose_name='pathDirIfNotHasDot')),
                ('pathDirPermissionHasGWArray', models.CharField(max_length=10, verbose_name='pathDirPermissionHasGWArray')),
                ('pathDirPermissionHasOWArray', models.CharField(max_length=10, verbose_name='pathDirPermissionHasOWArray')),
                ('pathDirOwnerIsNotRootArray', models.CharField(max_length=10, verbose_name='pathDirOwnerIsNotRootArray')),
                ('pathDirDoesNotExistOrNotDirArray', models.CharField(max_length=10, verbose_name='pathDirDoesNotExistOrNotDirArray')),
                ('userArray', models.CharField(max_length=10, verbose_name='userArray')),
                ('userHomeDirIfExistArray', models.CharField(max_length=10, verbose_name='userHomeDirIfExistArray')),
                ('userHomeDirPermissionArray', models.CharField(max_length=10, verbose_name='userHomeDirPermissionArray')),
                ('userIfOwnTheirHomeDirArray', models.CharField(max_length=10, verbose_name='userIfOwnTheirHomeDirArray')),
                ('userHomeDirIfHasGWorOWDotFileArray', models.CharField(max_length=10, verbose_name='userHomeDirIfHasGWorOWDotFileArray')),
                ('userHomeDirIfHasOtherFileArray', models.CharField(max_length=10, verbose_name='userHomeDirIfHasOtherFileArray')),
                ('groupNotExistInetcgroup', models.CharField(max_length=10, verbose_name='groupNotExistInetcgroup')),
                ('usersIfHasUniqueUIDArray', models.CharField(max_length=10, verbose_name='userIfHasUniqueUIDArray')),
                ('groupsIfHasUniqueGIDArray', models.CharField(max_length=10, verbose_name='groupsIfHasUniqueGIDArray')),
            ],
            options={
                'verbose_name': 'Linux安全基线扫描结果数据',
                'verbose_name_plural': 'Linux安全基线扫描结果数据',
            },
        ),
        migrations.CreateModel(
            name='LinuxScanResMeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scanTime', models.DateTimeField(verbose_name='scanTime')),
                ('macaddr', models.CharField(max_length=100, verbose_name='macaddr')),
                ('linuxScanResMetaData', models.CharField(max_length=100000, verbose_name='linuxScanResMeta')),
            ],
            options={
                'verbose_name': 'Linux安全基线扫描结果元数据',
                'verbose_name_plural': 'Linux安全基线扫描结果元数据',
            },
        ),
        migrations.CreateModel(
            name='MiddlewareCheckResMeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scanTime', models.DateTimeField(verbose_name='scanTime')),
                ('scanType', models.CharField(max_length=50)),
                ('hostname', models.CharField(max_length=100, verbose_name='hostname')),
                ('osVersion', models.CharField(max_length=100, verbose_name='osVersion')),
                ('ipList', models.CharField(max_length=100, verbose_name='ipList')),
                ('macaddr', models.CharField(max_length=100, verbose_name='macaddr')),
                ('middlewareCheckResMeta', models.CharField(max_length=65535, verbose_name='middlewareCheckResMeta')),
            ],
            options={
                'verbose_name': '中间件检查记录',
                'verbose_name_plural': '中间件检查记录',
            },
        ),
        migrations.CreateModel(
            name='VulnCheckRes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scanTime', models.DateTimeField(verbose_name='scanTime')),
                ('scanType', models.CharField(max_length=50)),
                ('hostname', models.CharField(max_length=100, verbose_name='hostname')),
                ('osVersion', models.CharField(max_length=100, verbose_name='osVersion')),
                ('ipList', models.CharField(max_length=100, verbose_name='ipList')),
                ('macaddr', models.CharField(max_length=100, verbose_name='macaddr')),
                ('vulnCheckRes', models.CharField(max_length=65535, verbose_name='vulnCheckRes')),
            ],
            options={
                'verbose_name': '漏洞检查记录',
                'verbose_name_plural': '漏洞检查记录',
            },
        ),
        migrations.CreateModel(
            name='WindowsCheckRes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scanTime', models.DateTimeField(verbose_name='scanTime')),
                ('hostname', models.CharField(max_length=100, verbose_name='hostname')),
                ('osVersion', models.CharField(max_length=100, verbose_name='osVersion')),
                ('ipList', models.CharField(max_length=100, verbose_name='ipList')),
                ('macaddr', models.CharField(max_length=100, verbose_name='macaddr')),
                ('passwordHistorySize', models.CharField(default='False', max_length=20, verbose_name='passwordHistorySize')),
                ('maximumPasswordAge', models.CharField(default='False', max_length=20, verbose_name='maximumPasswordAge')),
                ('minimumPasswordAge', models.CharField(default='False', max_length=20, verbose_name='minimumPasswordAge')),
                ('passwordComplexity', models.CharField(default='False', max_length=20, verbose_name='passwordComplexity')),
                ('clearTextPassword', models.CharField(default='False', max_length=20, verbose_name='clearTextPassword')),
                ('minimumPasswordLength', models.CharField(default='False', max_length=20, verbose_name='minimumPasswordLength')),
                ('lockoutDuration', models.CharField(default='False', max_length=20, verbose_name='lockoutDuration')),
                ('lockoutBadCount', models.CharField(default='False', max_length=20, verbose_name='lockoutBadCount')),
                ('resetLockoutCount', models.CharField(default='False', max_length=20, verbose_name='resetLockoutCount')),
                ('auditPolicyChange', models.CharField(default='False', max_length=20, verbose_name='auditPolicyChange')),
                ('auditLogonEvents', models.CharField(default='False', max_length=20, verbose_name='auditLogonEvents')),
                ('auditObjectAccess', models.CharField(default='False', max_length=20, verbose_name='auditObjectAccess')),
                ('auditProcessTracking', models.CharField(default='False', max_length=20, verbose_name='auditProcessTracking')),
                ('auditDSAccess', models.CharField(default='False', max_length=20, verbose_name='auditDSAccess')),
                ('auditSystemEvents', models.CharField(default='False', max_length=20, verbose_name='auditSystemEvents')),
                ('auditAccountLogon', models.CharField(default='False', max_length=20, verbose_name='auditAccontLogon')),
                ('auditAccountManage', models.CharField(default='False', max_length=20, verbose_name='auditAccountManage')),
                ('seTrustedCredManAccessPrivilegeIFNone', models.CharField(default='False', max_length=20, verbose_name='seTrustedCredManAccessPrivilegeIFNone')),
                ('seTcbPrivilegeIFNone', models.CharField(default='False', max_length=20, verbose_name='seTcbPrivilegeIFNone')),
                ('seMachineAccountPrivilegeIFOnlySpecifiedUserOrArray', models.CharField(default='False', max_length=20, verbose_name='seMachineAccountPrivilegeIFOnlySpecifiedUserOrArray')),
                ('seCreateGlobalPrivilegeIFNone', models.CharField(default='False', max_length=20, verbose_name='seCreateGlobalPrivilegeIFNone')),
                ('seDenyBatchLogonRightIFContainGuests', models.CharField(default='False', max_length=20, verbose_name='seDenyBatchLogonRightIFContainGuests')),
                ('seDenyServiceLogonRightIFContainGuests', models.CharField(default='False', max_length=20, verbose_name='seDenyServiceLogonRightIFContainGuests')),
                ('seDenyInteractiveLogonRightIFContainGuests', models.CharField(default='False', max_length=20, verbose_name='seDenyInteractiveLogonRightIFContainGuests')),
                ('seRemoteShutdownPrivilegeIFOnlySpecifiedUserOrArray', models.CharField(default='False', max_length=20, verbose_name='seRemoteShutdownPrivilegeIFOnlySpecifiedUserOrArray')),
                ('seRelabelPrivilegeIFNone', models.CharField(default='False', max_length=20, verbose_name='seRelabelPrivilegeIFNone')),
                ('seSyncAgentPrivilegeIFNone', models.CharField(default='False', max_length=20, verbose_name='seSyncAgentPrivilegeIFNone')),
                ('enableGuestAccount', models.CharField(default='False', max_length=20, verbose_name='enableGuestAccount')),
                ('limitBlankPasswordUse', models.CharField(default='False', max_length=20, verbose_name='limitBlankPasswordUse')),
                ('newAdministratorName', models.CharField(default='False', max_length=20, verbose_name='newAdministratorName')),
                ('newGuestName', models.CharField(default='False', max_length=20, verbose_name='newGuestName')),
                ('dontDisplayLastUserName', models.CharField(default='False', max_length=20, verbose_name='dontDisplayLastUserName')),
                ('disableCAD', models.CharField(default='False', max_length=20, verbose_name='disableCAD')),
                ('inactivityTimeoutSecs', models.CharField(default='False', max_length=20, verbose_name='inactivityTimeoutSecs')),
                ('enablePlainTextPassword', models.CharField(default='False', max_length=20, verbose_name='enablePlainTextPassword')),
                ('autoDisconnect', models.CharField(default='False', max_length=20, verbose_name='autoDisconnect')),
                ('noLMHash', models.CharField(default='False', max_length=20, verbose_name='noLMHash')),
                ('lsaAnonymousNameLookup', models.CharField(default='False', max_length=20, verbose_name='lsaAnonymousNameLookup')),
                ('restrictAnonymousSAM', models.CharField(default='False', max_length=20, verbose_name='restrictAnonymousSAM')),
                ('restrictAnonymous', models.CharField(default='False', max_length=20, verbose_name='restrictAnonymous')),
                ('clearPageFileAtShutdown', models.CharField(default='False', max_length=20, verbose_name='clearPageFileAtShutdown')),
                ('rdpPort', models.CharField(default='False', max_length=20, verbose_name='rdpPort')),
                ('autoRunRes', models.CharField(default='False', max_length=20, verbose_name='autoRunRes')),
            ],
            options={
                'verbose_name': 'windows安全基线检查结果',
            },
        ),
        migrations.CreateModel(
            name='WindowsScanRes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scanTime', models.DateTimeField(verbose_name='scanTime')),
                ('hostname', models.CharField(max_length=100, verbose_name='hostname')),
                ('osVersion', models.CharField(max_length=100, verbose_name='osVersion')),
                ('ipList', models.CharField(max_length=100, verbose_name='ipList')),
                ('macaddr', models.CharField(max_length=100, verbose_name='macaddr')),
                ('passwordHistorySize', models.IntegerField(verbose_name='passwordHistorySize')),
                ('maximumPasswordAge', models.IntegerField(verbose_name='maximumPasswordAge')),
                ('minimumPasswordAge', models.IntegerField(verbose_name='minimumPasswordAge')),
                ('passwordComplexity', models.IntegerField(verbose_name='passwordComplexity')),
                ('clearTextPassword', models.IntegerField(verbose_name='clearTextPassword')),
                ('minimumPasswordLength', models.IntegerField(verbose_name='minimumPasswordLength')),
                ('lockoutDuration', models.IntegerField(verbose_name='lockoutDuration')),
                ('lockoutBadCount', models.IntegerField(verbose_name='lockoutBadCount')),
                ('resetLockoutCount', models.IntegerField(verbose_name='resetLockoutCount')),
                ('auditPolicyChange', models.IntegerField(verbose_name='auditPolicyChange')),
                ('auditLogonEvents', models.IntegerField(verbose_name='auditLogonEvents')),
                ('auditObjectAccess', models.IntegerField(verbose_name='auditObjectAccess')),
                ('auditProcessTracking', models.IntegerField(verbose_name='auditProcessTracking')),
                ('auditDSAccess', models.IntegerField(verbose_name='auditDSAccess')),
                ('auditSystemEvents', models.IntegerField(verbose_name='auditSystemEvents')),
                ('auditAccountLogon', models.IntegerField(verbose_name='auditAccontLogon')),
                ('auditAccountManage', models.IntegerField(verbose_name='auditAccountManage')),
                ('seTrustedCredManAccessPrivilegeIFNone', models.CharField(max_length=100, verbose_name='seTrustedCredManAccessPrivilegeIFNone')),
                ('seTcbPrivilegeIFNone', models.CharField(max_length=100, verbose_name='seTcbPrivilegeIFNone')),
                ('seMachineAccountPrivilegeIFOnlySpecifiedUserOrArray', models.CharField(max_length=100, verbose_name='seMachineAccountPrivilegeIFOnlySpecifiedUserOrArray')),
                ('seCreateGlobalPrivilegeIFNone', models.CharField(max_length=100, verbose_name='seCreateGlobalPrivilegeIFNone')),
                ('seDenyBatchLogonRightIFContainGuests', models.BooleanField(verbose_name='seDenyBatchLogonRightIFContainGuests')),
                ('seDenyServiceLogonRightIFContainGuests', models.BooleanField(verbose_name='seDenyServiceLogonRightIFContainGuests')),
                ('seDenyInteractiveLogonRightIFContainGuests', models.BooleanField(verbose_name='seDenyInteractiveLogonRightIFContainGuests')),
                ('seRemoteShutdownPrivilegeIFOnlySpecifiedUserOrArray', models.CharField(max_length=100, verbose_name='seRemoteShutdownPrivilegeIFOnlySpecifiedUserOrArray')),
                ('seRelabelPrivilegeIFNone', models.CharField(max_length=100, verbose_name='seRelabelPrivilegeIFNone')),
                ('seSyncAgentPrivilegeIFNone', models.CharField(max_length=100, verbose_name='seSyncAgentPrivilegeIFNone')),
                ('enableGuestAccount', models.BooleanField(verbose_name='enableGuestAccount')),
                ('limitBlankPasswordUse', models.BooleanField(verbose_name='limitBlankPasswordUse')),
                ('newAdministratorName', models.BooleanField(verbose_name='newAdministratorName')),
                ('newGuestName', models.BooleanField(verbose_name='newGuestName')),
                ('dontDisplayLastUserName', models.BooleanField(verbose_name='dontDisplayLastUserName')),
                ('disableCAD', models.BooleanField(verbose_name='disableCAD')),
                ('inactivityTimeoutSecs', models.CharField(max_length=100, verbose_name='inactivityTimeoutSecs')),
                ('enablePlainTextPassword', models.BooleanField(verbose_name='enablePlainTextPassword')),
                ('autoDisconnect', models.CharField(max_length=100, verbose_name='autoDisconnect')),
                ('noLMHash', models.BooleanField(verbose_name='noLMHash')),
                ('lsaAnonymousNameLookup', models.BooleanField(verbose_name='lsaAnonymousNameLookup')),
                ('restrictAnonymousSAM', models.BooleanField(verbose_name='restrictAnonymousSAM')),
                ('restrictAnonymous', models.BooleanField(verbose_name='restrictAnonymous')),
                ('clearPageFileAtShutdown', models.BooleanField(verbose_name='clearPageFileAtShutdown')),
                ('rdpPort', models.CharField(max_length=10, verbose_name='rdpPort')),
                ('autoRunRes', models.CharField(max_length=10, verbose_name='autoRunRes')),
            ],
            options={
                'verbose_name': 'windows安全基线扫描结果元数据',
                'verbose_name_plural': 'Windows安全基线扫描结果元数据',
            },
        ),
        migrations.CreateModel(
            name='WindowsScanResMeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scanTime', models.DateTimeField(verbose_name='scanTime')),
                ('macaddr', models.CharField(max_length=100, verbose_name='macaddr')),
                ('windowsScanResMetaData', models.CharField(max_length=100000, verbose_name='windowsScanResMeta')),
            ],
            options={
                'verbose_name': 'windows安全基线扫描结果元数据',
                'verbose_name_plural': 'Windows安全基线扫描结果元数据',
            },
        ),
    ]
